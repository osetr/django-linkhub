# Generated by Django 3.1.1 on 2020-10-01 10:25

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=1024)),
                ('date', models.DateTimeField(default=datetime.datetime(2020, 10, 1, 10, 25, 8, 646391), editable=False)),
                ('likes', models.IntegerField(default=0, editable=False)),
                ('dislikes', models.IntegerField(default=0, editable=False)),
                ('is_private', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False, editable=False)),
                ('background_color', models.CharField(default='#F7F7F7', editable=False, max_length=8)),
                ('inheritences_amount', models.IntegerField(default=0, editable=False)),
                ('author', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrivateLinks',
            fields=[
                ('sharing_pk', models.UUIDField(default=uuid.UUID('81216985-be4c-4de1-897b-8fefbf89a305'), primary_key=True, serialize=False)),
                ('playlist', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, to='playlists.playlist', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(max_length=128)),
                ('description', models.CharField(blank=True, max_length=124)),
                ('check_relevance', models.BooleanField(default=False)),
                ('playlist', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, to='playlists.playlist')),
            ],
        ),
        migrations.CreateModel(
            name='IntroInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show', models.BooleanField(default=True)),
                ('author', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Inheritence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inherited_by', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, to='playlists.playlist')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField(default=0, max_length=1)),
                ('author', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('playlist', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, to='playlists.playlist')),
            ],
        ),
        migrations.CreateModel(
            name='DeletingTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cherished_time', models.DateTimeField(default=datetime.datetime(2020, 10, 1, 10, 25, 8, 647187), editable=False)),
                ('playlist', models.ForeignKey(default='', editable=False, on_delete=django.db.models.deletion.CASCADE, to='playlists.playlist')),
            ],
        ),
    ]
